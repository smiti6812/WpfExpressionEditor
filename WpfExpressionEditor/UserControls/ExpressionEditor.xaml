<UserControl x:Class="WpfExpressionEditor.UserControls.ExpressionEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:WpfExpressionEditor.UserControls"
             xmlns:local1="clr-namespace:WpfExpressionEditor.ViewModel"
             xmlns:custom="clr-namespace:WpfExpressionEditor.CustomCommands"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="240" d:DesignWidth="600" MaxWidth="600">
    <UserControl.DataContext>
        <local1:ExpressionEditorViewModel/>
    </UserControl.DataContext>
    <Border  BorderThickness="1" BorderBrush="Black">
        <Grid Height="auto"  VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="80"/>
                <RowDefinition Height="110"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <Grid x:Name="FirstGrid" Background="DarkGray">

                <StackPanel  VerticalAlignment="Center"  HorizontalAlignment="Center">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="29"/>
                            <ColumnDefinition Width="29"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="64"/>
                            <ColumnDefinition Width="65"/>
                            <ColumnDefinition Width="64"/>

                        </Grid.ColumnDefinitions>
                        <Button Content="Not" Width="25" Height="25" FontWeight="SemiBold" HorizontalAlignment="Stretch" Command="{Binding OperatorCommand}" CommandParameter="Not"  VerticalAlignment="Top" Grid.Column="1" Margin="0,20,0,0" />
                        <Button Content="=" Grid.Column="2" Width="25" FontWeight="Bold" Height="25" HorizontalAlignment="Stretch" Command="{Binding OperatorCommand}" CommandParameter="Equal" Margin="0,20,0,0" VerticalAlignment="Top"/>
                        <Button Content="And" Width="27" Height="25" FontWeight="SemiBold" HorizontalAlignment="Stretch" Command="{Binding OperatorCommand}" CommandParameter="And" VerticalAlignment="Top" Grid.Column="4" Margin="0,20,0,0" />
                        <Button Content="Or" Width="25" Height="25" FontWeight="SemiBold" HorizontalAlignment="Stretch" Command="{Binding OperatorCommand}" CommandParameter="Or" VerticalAlignment="Top"  Grid.Column="5" Margin="0,20,0,0"/>
                        <Button Content="Contains" Width="61" Height="25" FontWeight="SemiBold" HorizontalAlignment="Stretch" Command="{Binding OperatorCommand}" CommandParameter="Contains"  VerticalAlignment="Top" Grid.Column="7" Margin="0,20,0,0" />
                        <Button Content="StartsWith" Width="63" Height="25" FontWeight="SemiBold" HorizontalAlignment="Stretch" Command="{Binding OperatorCommand}" CommandParameter="StartsWith"  VerticalAlignment="Top" Grid.Column="8" Margin="0,20,0,0" />
                        <Button Content="EndsWith" Width="60" Height="25" FontWeight="SemiBold" HorizontalAlignment="Stretch" Command="{Binding OperatorCommand}" CommandParameter="EndsWith"  VerticalAlignment="Top" Grid.Column="9" Margin="0,20,0,0" />

                    </Grid>
                </StackPanel>

            </Grid>
            <Border  Grid.Row="1" BorderThickness="1" BorderBrush="Black">
                <TextBox HorizontalAlignment="Center" local1:TextBoxHelper.SelectedText="{Binding SelectedText}" TextChanged="ExpressionText_TextChanged"  x:Name="ExpressionText" TextWrapping="Wrap"  Text="{Binding ExpressionText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  VerticalAlignment="Center" Width="600" Height="80" Grid.Row="1">
                    <TextBox.Style>
                        <Style TargetType="TextBox">                            
                            <Setter Property="Foreground" Value="Black" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RuleTextOk}" Value="True">
                                    <Setter Property="Foreground" Value="DarkGreen" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding ExpressionTextChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </Border>
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1.5*" />
                    </Grid.ColumnDefinitions>
                    <Label Content="Fields:" HorizontalAlignment="Left" FontWeight="Bold" Grid.Column="0" VerticalAlignment="Top" Width="112"/>
                    <Button Grid.Column="1" Content="Check Formula" Command="{Binding CheckFormulaCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" Height="25"/>
                    <Button Grid.Column="2" IsEnabled="{Binding RuleTextOk}" Content="Save" Command="{Binding SaveCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" Height="25" Width="36"/>
                </Grid>
                <Label Content="Values:" HorizontalAlignment="Left" FontWeight="Bold" Grid.Column="1" VerticalAlignment="Top" Width="112"/>
                <ListBox Grid.Row="1" x:Name="FieldList" FontWeight="DemiBold"  ItemsSource="{Binding FieldsAndValues.Keys}" SelectedItem="{Binding SelectedField}" d:ItemsSource="{d:SampleData ItemCount=5}" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{TemplateBinding Content}" Width="268" HorizontalAlignment="Stretch">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="DimGray"></Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="LightGreen" />
                                                    <Setter Property="Foreground" Value="Black"></Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick" SourceName="FieldList">
                            <i:InvokeCommandAction Command="{Binding AddFieldCommand}" CommandParameter="{Binding ElementName=FieldList, Path=SelectedItem}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
                <ListBox Grid.Row="1" Grid.Column="1" FontWeight="DemiBold" x:Name="ValueList"  ItemsSource="{Binding FieldsAndValues.Values}" SelectedItem="{Binding SelectedPropertyValue}" d:ItemsSource="{d:SampleData ItemCount=5}" >                    
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{TemplateBinding Content}" Width="268" HorizontalAlignment="Stretch">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="DimGray"></Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="LightGreen" />
                                                    <Setter Property="Foreground" Value="Black"></Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick" SourceName="ValueList">
                            <i:InvokeCommandAction Command="{Binding AddPropertyValueCommand}" CommandParameter="{Binding ElementName=ValueList, Path=SelectedItem}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Grid>
            <TextBox Grid.Row="3" x:Name="ErrorText" Text="{Binding ErrorText}">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Foreground" Value="Red" />                       
                    </Style>
                </TextBox.Style>
            </TextBox>
        </Grid>
    </Border>
</UserControl>
